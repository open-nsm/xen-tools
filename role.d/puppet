#!/bin/sh
#
#  This role installs Puppet upon the new guest system.
#
#  It must make sure that the server is not running before it exits
# otherwise the temporary mounted directory will not be unmountable.
#

prefix=$1

#
#  Source our common functions - this will let us install a Debian package.
#
if [ -e /usr/share/xen-tools/common.sh ]; then
    . /usr/share/xen-tools/common.sh
else
    echo "Installation problem"
fi

#
# Log our start
#
logMessage Script $0 starting


#
#  Install puppet
#

cp /root/puppetlabs-release-trusty.deb ${prefix}/root
chroot ${prefix} /usr/bin/dpkg -i /root/puppetlabs-release-trusty.deb
chroot ${prefix} /usr/bin/apt-get update
chroot ${prefix} /usr/bin/apt-get -y install puppet

#
#  Configure puppet
#
chroot ${prefix} /bin/rm -rf /etc/puppet
chroot ${prefix} /bin/mkdir -p /root/.ssh
chroot ${prefix} /bin/chmod 0700 /root/.ssh
cp -a /root/.ssh/puppet ${prefix}/root/.ssh

cat <<EOF2 > ${prefix}/root/.ssh/config
Host git.gnulug.org
    User git
    HostName git.gnulug.org
    IdentityFile ~/.ssh/puppet
    StrictHostKeyChecking no
    UserKnownHostsFile=/dev/null
EOF2

chroot ${prefix} /usr/bin/git clone git@git.gnulug.org:open-nsm/puppet.git /etc/puppet

cat <<EOF1 > ${prefix}/etc/cron.d/puppet
# Pull latest puppet configuration
0 * * * * root  cd /etc/puppet && git pull && ./puppet_apply.sh
EOF1

#
#  Log our finish
#

logMessage Script $0 finished
